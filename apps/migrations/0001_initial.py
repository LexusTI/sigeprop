# Generated by Django 4.1.4 on 2023-06-05 14:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Audiencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_do_processo",
                    models.CharField(
                        max_length=100, verbose_name="Número de processo da audiência"
                    ),
                ),
                (
                    "data_do_processo",
                    models.DateTimeField(verbose_name="Data e horário da audiência"),
                ),
                (
                    "local",
                    models.CharField(
                        default="Fórum Bernardino de Souza",
                        max_length=250,
                        verbose_name="Local da audiência",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Cidade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=60, verbose_name="Nome da cidade"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConfiguracoesSite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notificar_email",
                    models.BooleanField(
                        default=True, verbose_name="Desativar notificação por email"
                    ),
                ),
                (
                    "notificar_whatsapp",
                    models.BooleanField(
                        default=True, verbose_name="Desativar notificação por whatsapp"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Documento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "documento",
                    models.FileField(
                        upload_to="documentos/%Y/%m/", verbose_name="Documento"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Estado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=30, verbose_name="Nome do estado"),
                ),
                (
                    "sigla",
                    models.CharField(max_length=2, verbose_name="Sigla do estado"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Evento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_do_processo",
                    models.CharField(
                        max_length=100, verbose_name="Número de processo do evento"
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome do evento"),
                ),
                (
                    "data_do_evento",
                    models.DateTimeField(verbose_name="Data e horário do evento"),
                ),
                (
                    "local",
                    models.CharField(max_length=250, verbose_name="Local do evento"),
                ),
                (
                    "documento",
                    models.ManyToManyField(
                        blank=True, related_name="eventos", to="apps.documento"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Perfil",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "foto",
                    models.ImageField(
                        blank=True,
                        upload_to="img_users/",
                        verbose_name="Foto de usuário",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pelotao", models.CharField(max_length=10, verbose_name="Pelotão")),
                (
                    "matricula",
                    models.CharField(max_length=20, verbose_name="Matrícula"),
                ),
                (
                    "cpf",
                    models.CharField(
                        help_text="Formato: xxx.xxx.xxx-xx",
                        max_length=14,
                        verbose_name="CPF",
                    ),
                ),
                (
                    "rg",
                    models.CharField(
                        help_text="Formato: xx.xxx.xxx-xx",
                        max_length=13,
                        verbose_name="RG",
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        help_text="Apenas números com DDD",
                        max_length=15,
                        verbose_name="Telefone",
                    ),
                ),
                (
                    "perfil",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="apps.perfil"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Unidade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=250, verbose_name="Nome da unidade"),
                ),
                (
                    "sigla",
                    models.CharField(max_length=20, verbose_name="Sigla da unidade"),
                ),
                ("cnpj", models.CharField(max_length=20, verbose_name="CNPJ")),
                (
                    "responsavel",
                    models.CharField(
                        max_length=250, verbose_name="Responsável pela unidade"
                    ),
                ),
                (
                    "contato",
                    models.CharField(max_length=60, verbose_name="Contato da unidade"),
                ),
                ("cep", models.CharField(max_length=10, verbose_name="CEP")),
                ("bairro", models.CharField(max_length=60, verbose_name="Bairro")),
                ("endereco", models.CharField(max_length=250, verbose_name="Endereço")),
                (
                    "complemento",
                    models.CharField(max_length=250, verbose_name="Complemento"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Ativo", "Ativo"),
                            ("Inativo", "Inativo"),
                            ("Em construção", "Em construção"),
                        ],
                        default="Ativo",
                        max_length=250,
                        verbose_name="Status da unidade",
                    ),
                ),
                (
                    "cidade",
                    smart_selects.db_fields.ChainedForeignKey(
                        auto_choose=True,
                        chained_field="estado",
                        chained_model_field="estado",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apps.cidade",
                    ),
                ),
                (
                    "estado",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apps.estado",
                        verbose_name="Estado",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Token_redefinicao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=64, verbose_name="Token")),
                ("usado", models.BooleanField(default=False, verbose_name="Usado?")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário do token",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Evento_Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "confirmar_recebimento",
                    models.BooleanField(
                        default=False, verbose_name="Confirmar recebimento"
                    ),
                ),
                (
                    "evento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evento_usuarios",
                        to="apps.evento",
                        verbose_name="Evento vinculado ao usuário",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evento_usuarios",
                        to="apps.usuario",
                        verbose_name="Usuário vinculado ao evento",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="evento",
            name="interessados",
            field=models.ManyToManyField(
                blank=True,
                related_name="eventos",
                through="apps.Evento_Usuario",
                to="apps.usuario",
                verbose_name="Interessados do evento",
            ),
        ),
        migrations.AddField(
            model_name="cidade",
            name="estado",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="apps.estado",
                verbose_name="Estado da cidade",
            ),
        ),
        migrations.CreateModel(
            name="Audiencia_Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "confirmar_recebimento",
                    models.BooleanField(
                        default=False, verbose_name="Confirmar recebimento"
                    ),
                ),
                (
                    "audiencia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audiencia_usuarios",
                        to="apps.audiencia",
                        verbose_name="Audiência vinculada ao usuário",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audiencia_usuarios",
                        to="apps.usuario",
                        verbose_name="Usuário vinculada a audiência",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="audiencia",
            name="documento",
            field=models.ManyToManyField(
                blank=True, related_name="audiencias", to="apps.documento"
            ),
        ),
        migrations.AddField(
            model_name="audiencia",
            name="interessados",
            field=models.ManyToManyField(
                blank=True,
                related_name="audiencias",
                through="apps.Audiencia_Usuario",
                to="apps.usuario",
                verbose_name="Interessados do processo de audiência",
            ),
        ),
        migrations.CreateModel(
            name="Armamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_de_registro",
                    models.CharField(
                        max_length=100, verbose_name="Número de registro da arma"
                    ),
                ),
                (
                    "tipo_de_arma",
                    models.CharField(
                        help_text="por exemplo: pistola, rifle, espingarda, etc.",
                        max_length=100,
                        verbose_name="Tipo da arma",
                    ),
                ),
                (
                    "status_da_arma",
                    models.CharField(
                        choices=[
                            ("Ativa", "Ativa"),
                            ("Inativa", "Inativa"),
                            ("Em manutenção", "Em manutenção"),
                        ],
                        default="Ativa",
                        max_length=20,
                    ),
                ),
                (
                    "usuario_atual",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apps.usuario",
                        verbose_name="Usuário atual",
                    ),
                ),
            ],
        ),
    ]
